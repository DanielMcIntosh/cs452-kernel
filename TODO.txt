TODO:

IMPORTANT:
    route from next sensor, not last sensor

    revserving routes
        allow re-reservation if the train already owns it
        allow travel if the train already owns it
        unreserve track
        wake up when track free's up

    reversing routes

    individual stopping distances for trains

    add timeouts for if a train doesn't hit a sensor in time

    notify track_state of switches taken by train after sensor attribution

UNKOWN IMPORTANCE:
    send route directly from terminal to train_state, so command.c never talks to train state ?? please explain?


NOT THAT IMPORTANT:
    rename track.c and track.h to routing.c and routing.h

    Clean up parameter order - mostly in track_state and train_state

    change sensor attribution to use bfs with starting nodes of _all the trains_ last sensors

    when we change speed, find a way to put off adjusting velocity calibration

    change CURRENT_SPEED to 0? and stop double-inverting train->speed

    actually set train->direction

    find instances of RunWhen


BRIAN:
    1. position
        a) position infra
        b) accel calibration
        c) short move integration
    2. short move integration
    3. short move calibration
    4. error handling?
